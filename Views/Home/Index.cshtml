@model Weather_App.Models.WeatherViewModel

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Weather Forecast</title>
    <link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css">
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/weather-icons/2.0.10/css/weather-icons.min.css">
</head>
<body>
    <div class="container my-5">
        <h1 class="text-center mb-5">Weather Forecast</h1>

        <div class="row">
            <div class="col-md-6">
                <h2>Current Weather</h2>
                <div class="card">
                    <div class="card-body">
                        <h5 class="card-title">@Model.CurrentWeather.CityName</h5>
                        <p class="card-text">@Model.CurrentWeather.Date.ToString("MMMM d, yyyy")</p>
                        <p class="card-text">Temperature: @Model.CurrentWeather.Temperature°C</p>
                        <p class="card-text">Main Status: @Model.CurrentWeather.MainStatus</p>
                        <i class="@GetWeatherIconClass(Model.CurrentWeather.MainStatus)" style="font-size: 48px;"></i>

                    </div>
                </div>
            </div>
            <div class="col-md-6">
                <h2>Weekly Forecast</h2>
                <table class="table table-striped">
                    <thead>
                        <tr>
                            <th>Date</th>
                            <th>Temperature</th>
                            <th>Main Status</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var forecast in Model.WeeklyForecast)
                        {
                            <tr>
                                <td>@forecast.Date.ToString("MMM dd")</td>
                                <td>@forecast.Temperature°C</td>
                                <td>@forecast.MainStatus</td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        </div>

        <div class="row mt-5">
            <div class="col-12">
                <h2 class="text-center">Weekly Temperature Chart</h2>
                <canvas id="weatherChart"></canvas>
            </div>
        </div>
    </div>

    <script>
        // Prepare data for the chart
        const labels = @Html.Raw(Json.Serialize(Model.WeeklyForecast.Select(f => f.Date.ToString("MMM dd")).ToList()));
        const data = @Html.Raw(Json.Serialize(Model.WeeklyForecast.Select(f => f.Temperature).ToList()));

        // Configuring the Chart
        const ctx = document.getElementById('weatherChart').getContext('2d');
        const weatherChart = new Chart(ctx, {
            type: 'line',
            data: {
                labels: labels,
                datasets: [{
                    label: 'Temperature (°C)',
                    data: data,
                    backgroundColor: 'rgba(75, 192, 192, 0.2)',
                    borderColor: 'rgba(75, 192, 192, 1)',
                    borderWidth: 1,
                    fill: false
                }]
            },
            options: {
                responsive: true,
                scales: {
                    y: {
                        beginAtZero: true
                    }
                }
            }
        });
    </script>
</body>
@functions {
    string GetWeatherIconClass(string mainStatus)
    {
        return mainStatus?.ToLower() switch
        {
            "clear" => "wi wi-day-sunny",
            "sunny" => "wi wi-day-sunny",
            "warm" => "wi wi-day-sunny",
            "cloudy" => "wi wi-cloudy",
            "clouds" => "wi wi-cloudy",
            "rain" => "wi wi-rain",
            "rainy" => "wi wi-rain",
            "snow" => "wi wi-snow",
            "snowy" => "wi wi-snow",
            "thunderstorm" => "wi wi-thunderstorm",
            "drizzle" => "wi wi-sprinkle",
            "mist" => "wi wi-fog",
            "fog" => "wi wi-fog",
            "foggy" => "wi wi-fog",
            _ => "wi wi-na"
        };
    }
}
</html>
